d <- Sys.Date(    )
d <- Sys.Date()
as.numeric(d)
as.Date(as.numeric(d)+1)
as.Date(as.numeric(d)+1,origin = 1970)
as.Date((as.numeric(d)+1),origin = 1970)
as.numeric(d)+1
as.Date(17124)
as.Date(17124,origin=1970)
?as.Date
julian(d)
as.Date((as.numeric(d)+1),origin = "1970-01-01")
date
date()
library(lubridate)
ymd(20140101)
dmy(1122014)
dmy(11214)
dmy(1114)
dmy(10114)
ymd_hms("20140101240243")
ymd_hms("140101240243")
Sys.timezone()
Sys.time()
wday(d)
wday(d,label = T)
install.packages("tesseract")
library(tesseract)
text <- ocr("http://jeroenooms.github.io/images/testocr.png")
text
cat(text)
text2 <- ocr("http://jeroenooms.github.io/files/inlove.png")
text2
text2
cat(text2)
?library
pkg <- c("ggplot","dplyr","lubridate")
class(pkg)
pkg <- as.list(pkg)
class(pkg)
pkg
sapply(pkg,require)
pkg[1]
pkg[[1]]
lapply(pkg,require)
lapply(pkg,library)
as.character(pkg[1])
lapply(pkg,library,character.only=T)
lapply(pkg,library,character.only=F)
pkg <- c("ggplot","dplyr","lubridate")
lapply(pkg,require)
lapply(pkg,require,character.only=T)
lapply(pkg,require,character.only=T,verbose=T)
lapply(pkg,require,character.only=T,quietly=T)
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package="lubridate")
help(package = "lubridate")
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
now()
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920//01//2")
ymd("1920/01/2")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 9, minutes =4)
this_moment
?noc
?now
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz()
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tzone="Singapore")
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?interval
how_long <- interval(arrive, last_time)
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
packages <- c("plyr","dplyr","xlsx","lubridate","tidyr","cluster","HSAUR","factoextra")
sapply(as.list(packages),require,character.only=T)
qplot?
library(ggplot2)
?qplot?
?qplot
head(airquality$Ozone)
length(airquality$Ozone)
hist(airquality$Ozone)
rug(airquality$Ozone)
with(airquality,plot(Wind,Ozone))
?transform
a <- transform(airquality, Month=factor(Month))
head(a)
boxplot(Ozone ~ Month, a, xlab("Month"),ylab("Ozone"))
boxplot(Ozone ~ Month, a, xlab="Month",ylab="Ozone")
par("bg")
par("mfrow")
par("mar")
par("oma")
par(bg="lime")
par(bg="yellow")
boxplot(Ozone ~ Month, a, xlab="Month",ylab="Ozone")
y <- rnorm
y
y <- rnorm(100)
hist(y)
z <- rnorm(100)
plot(y,z,pch=3)
par(mar=c(2,2,2,2))
par(mar=c(4,4,2,2))
plot(y,z,pch=3)
example(points)
par(mfrow=c(2,1))
x <- rnorm(100)
y <- rnorm(100) + x
g <- gl(2,50)
head(g)
g
g <- gl(2,50,labels = c("Male","Female"))
dev.off()
par(mfrow=c(2,1))
plot(x,y,type="n")
points(x[g=="Male"],y[g=="Female"],col="green")
points(x[g=="Female"],y[g=="Male",col="blue"])
points(x[g=="Female"],y[g=="Male",col="blue")
par(mfrow=c(1,1))
points(x[g=="Female"],y[g=="Male",col="blue"])
dev.off()
par(mfrow=c(1,1))
plot(x,y,type="n")
points(x[g=="Female"],y[g=="Male",col="blue"])
points(x[g=="Female"],y[g=="Male",col="blue")
points(x[g=="Female"],y[g=="Male"],col="blue")
points(x[g=="Male"],y[g=="Female"],col="green")
g
class(g)
?gl
Version()
R.Version()
library(swirl)
library("swirl")
install.packages("swirl")
library(swirl)
library("swirl")
install.packages("yaml")
library("swirl")
swirl()
bye()
quit()
library("swirl")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col="blue")
abline(h=12)
hist(ppm, col="green")
rug(ppm)
low
high
hist(ppm, col="green", breaks=100)
rug(ppm)
hist(ppm, col="green")
abline(v=12, lwd=2)
abline(v=median(ppm), col="magenta", lwd=4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg, col="wheat", main="Number of Counties in Each Region")
boxplot(pm25~region, data=pollution, col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution, region=="east")
head(east)
hist(pollution$pm25, col="green")
hist(east$pm25, col="green")
west <- subset(pollution, region=="west")
hist(subset(pollution,pollution$region=="west")$pm25, col = "green")
hist(subset(pollution,region=="west")$pm25, col = "green")
with(pollution,plot(pm25,latitude))
with(pollution,plot(latitude,pm25))
abline(h=12, lwd=2, lty=2)
plot(pollution$latitude, pollution$pm25, col=pollution$region)
plot(pollution$latitude, ppm, col=pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow=c(1,2), mar=c(5,4,2,1))
west <- subset(pollution, region=="west")
plot(west$latitude, west$pm25, main="West")
plot(west$latitude, west$pm25, main="West")
plot(west$latitude, west$pm25)
par(mfrow=c(1,2), mar=c(4,4,2,1))
plot(west$latitude, west$pm25, main="West")
par(mfrow=c(1,2), mar=c(4,4,1,1))
plot(west$latitude, west$pm25, main="West")
par(mfcol=c(2,1), mar=c(4,4,1,1))
plot(west$latitude, west$pm25, main="West")
swirl()
swirl()
plot(east$latitude, east$pm25, main="East")
exit
exit()
quit()
swirl()
library(swirl)
swirl()
?Devices
Devices(faithful,plot(eruptions,waiting))
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful,plot(eruption,waiting))
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.copy(png,file="geyserplot.png")
dev.off()
head(cars)
with(cars,plot(speed,hist))
with(cars,plot(speed,dist))
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp~Income | region,data=state,layout=c(4,1))
xyplot(Life.Exp~Income | region,data=state,layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ,hwy,data=mpg)
head(airquality)
range(airquality$Ozone,na.rm = T)
range(airquality$Ozone,na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, data=airquality)
boxplot(Ozone~Month, data=airquality, xlab="Month", ylab="Ozone (ppb)", col.axis="blue", col.lab="red")
title(main="Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone))
title(main="Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par()$fg
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone, type="n")
title(main="Wind and Ozone in NYC")
may <- subset(airquality, Months==5)
head(airquality)
may <- subset(airquality, Month==5)
par()$pch
plot(may$Wind,may$Ozone)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality,Month!=5)
points(notmay$Wind,notmay$Ozone,col="red",pch=18)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
par(mfrow=c(1,3),mar=c(4,4,2,1),oma=c(0,0,2,0))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City",outer = TRUE)
head(df1)
library(data.table)
library(dplyr)
setwd("C:/Users/sam.jacob/Downloads/exdata")
f <- dir()[1]
dt1 <- as.Date("2007-02-01")
dt2 <- as.Date("2007-02-02")
df <- fread(f,header = T, sep=";", na.strings = "?")
df <- tbl_df(df)
df$Date <- as.Date(df$Date,"%d/%m/%Y")
names(df)[1] <- "date"
#df1 <- filter(df,df$Date=="2007-02-01"|df$Date=="2007-02-02")
df1 <- filter(df,date==dt1|date==dt2)
head(df1)
names(df)[2] <- "time"
df2 <- mutate(df1,datetime =paste(date,time,sep="") )
head(df1)
names(df)[2] <- "time"
df1 <- filter(df,date==dt1|date==dt2)
df2 <- mutate(df1,datetime = paste(date,time,sep="") )
png(file="plot2.png",height = 480, width = 480, units = "px")
with(df1,plot(datetime,Global_active_power,type = "p"))
dev.off()
png(file="plot2.png",height = 480, width = 480, units = "px")
with(df1,plot(datetime,Global_active_power,type = "p"))
dev.off()
dev.off()
png(file="plot2.png",height = 480, width = 480, units = "px")
with(df1,plot(datetime,Global_active_power,type = "p"))
dev.off()
df2 <- mutate(df1,datetime = paste(date,time,sep="") )
head(df2)
head(df2$datetime)
df2 <- mutate(df1,datetime = paste(date,time,sep=" "))
d <- df2$datetime[1]
d
d <- as.POSIXlt(d)
d
d <- df2$datetime[1]
d
class(d)
d <- as.POSIXlt(d,format = "%Y-%m-%d %H:%M:%S")
d
months(d)
second(d)
d <- as.POSIXct(d,format = "%Y-%m-%d %H:%M:%S")
d
class(d)
month(d)
second(d)
as.POSIXct(strptime("2011-03-27 01:30:00", "%Y-%m-%d %H:%M:%S"))
d <- as.POSIXct(strptime(d,"%Y-%m-%d %H:%M:%S"))
d
d <- df2$datetime[1]
d <- as.POSIXct(strptime(d,"%Y-%m-%d %H:%M:%S"))
d
minute(d)
hour(d)
df2 <- mutate(df1,datetime = as.POSIXct(strptime(paste(date,time,sep=" "),"%Y-%m-%d %H:%M:%S"))
)
png(file="plot2.png",height = 480, width = 480, units = "px")
with(df2,plot(datetime,Global_active_power,type = "p"))
dev.off()
dev.cur()
dev.new()
png(file="plot2.png",height = 480, width = 480, units = "px")
with(df2,plot(datetime,Global_active_power,type = "p"))
dev.off()
png(file="plot2.png",height = 480, width = 480, units = "px")
with(df2,plot(datetime,Global_active_power,type = "l"))
dev.off()
png(file="plot2.png",height = 480, width = 480, units = "px")
with(df2,plot(datetime,Global_active_power,type = "l"))
dev.off()
dev.cur()
dev.new()
dev.off()
png(file="plot2.png",height = 480, width = 480, units = "px")
with(df2,plot(datetime,Global_active_power,type = "l"))
dev.off()
df2 <- mutate(df1,datetime = as.POSIXct(strptime(paste(date,time,sep=" "),"%Y-%m-%d %H:%M:%S")))
png(file="plot2.png",height = 480, width = 480, units = "px")
dev.cur()
with(df2,plot(datetime,Global_active_power,type = "l"))
dev.off()
getwd()
setwd("C:/Sammy/ExData_Plotting1")
png(file="plot2.png",height = 480, width = 480, units = "px")
with(df2,plot(datetime,Global_active_power,type = "l"))
dev.off()
head(df2)
summary(df2)
with(df2,plot(datetime,Sub_metering_1,type = "n"))
with(df2,line(datetime,Sub_metering_1,col="black")
with(df2,line(datetime,Sub_metering_2,col="red")
with(df2,line(datetime,Sub_metering_3,col="blue")
dev.off()
png(file="plot3.png",height = 480, width = 480, units = "px")
with(df2,plot(datetime,Sub_metering_1,type = "n"))
png(file="plot3.png",height = 480, width = 480, units = "px")
with(df2,plot(datetime,Sub_metering_1,type = "n"))
dev.off()
png(file="plot3.png",height = 480, width = 480, units = "px")
with(df2,plot(datetime,Sub_metering_1,type = "n"))
with(df2,line(datetime,Sub_metering_1,col="black")
png(file="plot3.png",height = 480, width = 480, units = "px")
with(df2,plot(datetime,Sub_metering_1,type = "n"))
with(df2,line(datetime,Sub_metering_1,col="black"))
with(df2,line(datetime,Sub_metering_2,col="red"))
with(df2,line(datetime,Sub_metering_3,col="blue"))
dev.off()
png(file="plot3.png",height = 480, width = 480, units = "px")
with(df2,plot(datetime,Sub_metering_1,type = "n"))
with(df2,lines(datetime,Sub_metering_1,col="black"))
with(df2,lines(datetime,Sub_metering_2,col="red"))
with(df2,lines(datetime,Sub_metering_3,col="blue"))
dev.off()
png(file="plot3.png",height = 480, width = 480, units = "px")
with(df2,plot(datetime,Sub_metering_1,type = "n"))
with(df2,lines(datetime,Sub_metering_1,col="black"))
with(df2,lines(datetime,Sub_metering_2,col="red"))
with(df2,lines(datetime,Sub_metering_3,col="blue"))
dev.off()
setwd("C:/Sammy/ExData_Plotting1")
png(file="plot3.png",height = 480, width = 480, units = "px")
with(df2,plot(datetime,Sub_metering_1,type = "n"))
with(df2,lines(datetime,Sub_metering_1,col="black"))
with(df2,lines(datetime,Sub_metering_2,col="red"))
with(df2,lines(datetime,Sub_metering_3,col="blue"))
dev.off()
with(df2,plot(datetime,Sub_metering_1,type = "n"))
with(df2,lines(datetime,Sub_metering_1,col="black"))
with(df2,lines(datetime,Sub_metering_2,col="red"))
with(df2,lines(datetime,Sub_metering_3,col="blue"))
png(file="plot3.png",height = 480, width = 480, units = "px")
with(df2,plot(datetime,Sub_metering_1,type = "n"))
with(df2,lines(datetime,Sub_metering_1,col="black"))
with(df2,lines(datetime,Sub_metering_2,col="red"))
with(df2,lines(datetime,Sub_metering_3,col="blue"))
dev.off()
getwd()
png(file="plot3.png",height = 480, width = 480, units = "px")
with(df2,plot(datetime,Sub_metering_1,type = "n"))
with(df2,lines(datetime,Sub_metering_1,col="black"))
with(df2,lines(datetime,Sub_metering_2,col="red"))
with(df2,lines(datetime,Sub_metering_3,col="blue"))
dev.off()
